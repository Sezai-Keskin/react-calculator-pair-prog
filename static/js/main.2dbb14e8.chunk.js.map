{"version":3,"sources":["components/keys/DigitKey.jsx","components/keys/OperatorKey.jsx","components/keys/ResetKey.jsx","components/keys/CalcKey.jsx","components/keys/AuxKey.jsx","components/keys/DecimalPoint.jsx","components/Keypad.jsx","components/Display.jsx","components/Calculator.jsx","index.js"],"names":["DigitKey","props","className","onClick","handleInput","value","OperatorKey","ResetKey","CalcKey","AuxKey","DecimalPoint","Keypad","handleDigitInput","handleOperatorInput","handleResetInput","handleCalcKey","handleSignumAndPercent","handleDecimalPoint","Display","displayValue","Calculator","useState","operand1","setOperand1","operand2","setOperand2","operator","setOperator","result","setResult","display","setDisplay","isCalculated","setIsCalculated","reset","calculate","res","Number","toString","val","length","transform","sym","input","indexOf","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2dbb14e8.chunk.js","sourcesContent":["import React from 'react';\n\nconst DigitKey = (props) => {\n    return(\n        \n\t\t<button\n\t\t\tclassName={props.className}\n\t\t\tonClick={() => props.handleInput(props.value)}>\n\t\t\t\t{props.value}\n\t\t</button>\n\n    )\n}\n\nexport default DigitKey;","import React from 'react';\n\nconst OperatorKey = (props) => {\n    return(\n        \n\t\t<button\n\t\t\tclassName={props.className}\n\t\t\tonClick={() => props.handleInput(props.value)}>\n\t\t\t\t{props.value}\n\t\t</button>\n\n    )\n}\n\nexport default OperatorKey;","import React from 'react';\n\nconst ResetKey = (props) => {\n    return(\n        \n\t\t<button\n\t\t\tclassName={props.className}\n\t\t\tonClick={() => props.handleInput()}>\n\t\t\t\t{props.value}\n\t\t</button>\n\n    )\n}\n\nexport default ResetKey;","import React from 'react';\n\nconst CalcKey = (props) => {\n    return(\n        \n\t\t<button\n\t\t\tclassName={props.className}\n\t\t\tonClick={() => props.handleInput()}>\n\t\t\t\t{props.value}\n\t\t</button>\n\n    )\n}\n\nexport default CalcKey;","import React from 'react';\n\nconst AuxKey = (props) => {\n    return(\n        \n\t\t<button\n\t\t\tclassName={props.className}\n\t\t\tonClick={() => props.handleInput(props.value)}>\n\t\t\t\t{props.value}\n\t\t</button>\n\n    )\n}\n\nexport default AuxKey;","import React from 'react';\n\n\nconst DecimalPoint = (props) => {\n    return(\n        \n\t\t<button\n\t\t\tclassName={props.className}\n\t\t\tonClick={() => props.handleInput()}>\n\t\t\t\t{props.value}\n\t\t</button>\n\n    )\n}\n\nexport default DecimalPoint;","import React from 'react';\nimport DigitKey from './keys/DigitKey';\nimport OperatorKey from './keys/OperatorKey';\nimport ResetKey from './keys/ResetKey';\nimport CalcKey from './keys/CalcKey';\nimport AuxKey from './keys/AuxKey';\nimport DecimalPoint from './keys/DecimalPoint'\n\nconst Keypad = ({handleDigitInput, handleOperatorInput, handleResetInput, handleCalcKey, handleSignumAndPercent, handleDecimalPoint}) => {\n\n    return (\n        <section className='keypad'>\n            <ResetKey className=\"key upper-key\" handleInput={handleResetInput} value=\"ac\" />\n            <AuxKey className=\"key upper-key\" handleInput={handleSignumAndPercent} value=\"+/-\"/>\n            <AuxKey className=\"key upper-key\" handleInput={handleSignumAndPercent} value=\"%\"/>\n            <OperatorKey className=\"key operator-key\" handleInput={handleOperatorInput} value=\"/\"/>\n            \n\t\t\t<DigitKey className=\"key digit-key\" handleInput={handleDigitInput} value=\"7\"/>\n            <DigitKey className=\"key digit-key\" handleInput={handleDigitInput} value=\"8\"/>\n            <DigitKey className=\"key digit-key\" handleInput={handleDigitInput} value=\"9\"/>\n            \n\t\t\t<OperatorKey className=\"key operator-key\" handleInput={handleOperatorInput} value=\"x\"/>\n            \n\t\t\t<DigitKey className=\"key digit-key\" handleInput={handleDigitInput} value=\"4\"/>\n            <DigitKey className=\"key digit-key\" handleInput={handleDigitInput} value=\"5\"/>\n            <DigitKey className=\"key digit-key\" handleInput={handleDigitInput} value=\"6\"/>\n            \n\t\t\t<OperatorKey className=\"key operator-key\" handleInput={handleOperatorInput} value=\"-\"/>\n            \n\t\t\t<DigitKey className=\"key digit-key\" handleInput={handleDigitInput} value=\"1\"/>\n            <DigitKey className=\"key digit-key\" handleInput={handleDigitInput} value=\"2\"/>\n            <DigitKey className=\"key digit-key\" handleInput={handleDigitInput} value=\"3\"/>\n            \n\t\t\t<OperatorKey className=\"key operator-key\" handleInput={handleOperatorInput} value=\"+\"/>\n            \n\t\t\t<DigitKey className=\"key digit-key zero\" handleInput={handleDigitInput} value=\"0\"/>\n            <DecimalPoint className=\"key digit-key\" handleInput={handleDecimalPoint} value=\".\"/>\n            <CalcKey className=\"key operator-key\" handleInput={handleCalcKey} value=\"=\"/>\n        </section>\n    )\n}\n\nexport default Keypad;","import React from 'react';\n\n\nconst Display = ({displayValue}) => {\n    return (\n        <section className='display'>\n                <p>{displayValue}</p>\n\n        </section>\n    )\n}\n\n\nexport default Display;\n","import React, {useState} from 'react';\nimport Keypad from './Keypad';\nimport Display from './Display';\nimport '../assets/App.css';\n\n\nconst Calculator = () => {\n    const [operand1, setOperand1] = useState('');\n    const [operand2, setOperand2] = useState('');\n    const [operator, setOperator] = useState('');\n\tconst [result, setResult] = useState('');\n\tconst [display, setDisplay] = useState('Hello calculator!');\n\tconst [isCalculated, setIsCalculated] = useState(false);\n\n\t// input handler for the digit keys:\n\tconst handleDigitInput = (val) => {\n\t\t// the only console.log() we needed!!!\n\t\t// console.log(val);\n\t\tif (isCalculated) {\n\t\t\t// reset everything!\n\t\t\treset();\n\t\t\tsetOperand1(val);\n\t\t\tsetDisplay(val);\n\t\t} else {\n\t\t\tif (result !== '') {\n\t\t\t\tif (result.length <= 11) {\n\t\t\t\t\tsetOperand1(result + val);\n\t\t\t\t\tsetDisplay(result + val);\n\t\t\t\t\tsetOperand2('');\n\t\t\t\t\tsetOperator('');\n\t\t\t\t\tsetResult('');\n\t\t\t\t}\n\t\t\t} else if (operator === '') {\n\t\t\t\tif (operand1.length <= 11) {\n\t\t\t\t\tsetOperand1(operand1 + val);\n\t\t\t\t\tsetDisplay(operand1 + val);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (operand2.length <= 11) {\n\t\t\t\t\tsetOperand2(operand2 + val);\n\t\t\t\t\tsetDisplay(operand2 + val);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tsetIsCalculated(false);\n\t}\n\n\t// when an operator key is pressed:\n\tconst handleOperatorInput = (val) => {\n\t\tif (result !== '') {\n\t\t\tsetOperand1(result);\n\t\t\tsetOperand2('');\n\t\t\tsetOperator(val);\n\t\t\tsetResult('');\n\t\t} else if (operand2 !== '') {\n\t\t\tlet res = calculate();\n\t\t\tsetOperand1(res);\n\t\t\tsetOperand2('');\n\t\t\tsetOperator(val);\n\t\t} else {\n\t\t\tsetOperator(val);\n\t\t\tsetDisplay(val);\n\t\t}\n\t\tsetIsCalculated(false);\n\t}\n\n\t// resets:\n\t// 1 — reset key pressed\n\tconst handleResetInput = () => {\n\t\treset();\n\t}\n\n\t// 2 — reset function\n\tconst reset = () => {\n\t\tsetOperand1('');\n\t\tsetOperand2('');\n\t\tsetOperator('');\n\t\tsetResult('');\n\t\tsetDisplay('Hello calculator!');\n\t}\n\n\t// when the '=' key is pressed:\n\tconst handleCalcKey = () => {\n\t\tif (operator !== '' && operand1 !== '' && operand2 !== '') {\n\t\t\tcalculate();\n\t\t}\n\t}\n\n\t// THE function\n\tconst calculate = () => {\n\t\tlet res;\n\t\tif (operator === 'x') {\n\t\t\tres = (Number(operand1) * Number(operand2)).toString();\n\t\t\tsetResult(res);\n\t\t\tsetDisplay(res);\n\t\t}\n\t\tif (operator === '+') {\n\t\t\tres = (Number(operand1) + Number(operand2)).toString();\n\t\t\tsetResult(res)\n\t\t\tsetDisplay(res);\n\t\t}\n\t\tif (operator === '-') {\n            res = (Number(operand1) - Number(operand2)).toString()\n            setResult(res)\n\t\t\tsetDisplay(res);\n\t\t}\n\t\tif (operator === '/') {\n\t\t\tres = operand2 === '0' ? '💩' : (Number(operand1) / Number(operand2)).toString();\n\t\t\tsetResult(res)\n\t\t\tsetDisplay(res);\n\t\t}\n\t\tsetIsCalculated(true);\n\t\treturn res;\n\t}\n\n\t// handler for auxillary keys ('+/-' and '%'):\n\tconst handleSignumAndPercent = (val) => {\n\t\tconst transform = (sym, input) => {\n\t\t\tif (sym === '%') {\n\t\t\t\treturn (Number(input) / 100).toString();\n\t\t\t}\n\t\t\tif (sym === '+/-') {\n\t\t\t\treturn (Number(input) * -1).toString();\n\t\t\t}\n\t\t}\n\t\tif (result !== '') {\n\t\t\tsetResult(transform(val, result));\n\t\t\tsetDisplay(transform(val, result));\n\t\t} else if (operand2 !== '') {\n\t\t\tsetOperand2(transform(val, operand2));\n\t\t\tsetDisplay(transform(val, operand2))\n\t\t} else {\n\t\t\tsetOperand1(transform(val, operand1));\n\t\t\tsetDisplay(transform(val, operand1))\n\t\t}\n\t\tsetIsCalculated(false);\n\t}\n\t\n\t// when '.' key is pressed:\n\tconst handleDecimalPoint = () => {\n\t\tif (result !== '') {\n\t\t\tif (result.indexOf('.') === -1) {\n\t\t\t\tsetResult(result + '.');\n\t\t\t\tsetDisplay(display + '.');\n\t\t\t}\n\t\t} else if (operand2 !== '') {\n\t\t\tif (operand2.indexOf('.') === -1) {\n\t\t\t\tsetOperand2(operand2 + '.');\n\t\t\t\tsetDisplay(operand2 + '.');\n\t\t\t}\n\t\t} else if (operand2 === '' && operator !== '') {\n\t\t\tsetOperand2('0.');\n\t\t\tsetDisplay('0.');\n\t\t} else if (operand1 !== '' && operand1.indexOf('.') === -1) {\n\t\t\tsetOperand1(operand1 + '.');\n\t\t\tsetDisplay(operand1 + '.');\n\t\t} else if (operand1 === '') {\n\t\t\tsetOperand1('0.');\n\t\t\tsetDisplay('0.');\n\t\t}\n\t\tsetIsCalculated(false);\n\t}\n\n    return (\n\t\t<main>\n\t\t\t<Display displayValue={display}/>\n\t\t\t<Keypad\n\t\t\t\thandleDigitInput={handleDigitInput}\n\t\t\t\thandleOperatorInput={handleOperatorInput}\n\t\t\t\thandleResetInput={handleResetInput}\n\t\t\t\thandleCalcKey={handleCalcKey}\n\t\t\t\thandleSignumAndPercent={handleSignumAndPercent}\n\t\t\t\thandleDecimalPoint={handleDecimalPoint}\n\t\t\t/>\n\t\t</main>\n    )\n}\n\nexport default Calculator;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Calculator from './components/Calculator';\n\n\nReactDOM.render(\n\n    <Calculator />, document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}